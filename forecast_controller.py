
import streamlit as st
import pandas as pd
from models.forecast_model import ForecastModel
import matplotlib.pyplot as plt

st.set_page_config(page_title="D·ª± b√°o Doanh thu S·∫£n ph·∫©m", layout="wide")
st.title("üîÆ D·ª± b√°o Doanh thu S·∫£n ph·∫©m theo Th√°ng")

def forecast_data(df, stock_code, country, forecast_months):
    filtered_df = df[(df["StockCode"] == stock_code) & (df["Country"] == country)]
    if filtered_df.empty:
        return None, "‚ùå Kh√¥ng c√≥ d·ªØ li·ªáu ph√π h·ª£p."
    else:
        monthly = filtered_df.groupby("Month").agg({"Revenue": "sum"}).reset_index()
        monthly.columns = ["ds", "y"]

        # Forecast using model
        model = ForecastModel(monthly)
        forecast = model.forecast(forecast_months)

        return forecast, None

def display_results(forecast):
    st.subheader("üìä K·∫øt qu·∫£ D·ª± b√°o")
    st.dataframe(forecast)
    st.subheader("üìà Bi·ªÉu ƒë·ªì D·ª± b√°o")
    fig, ax = plt.subplots(figsize=(10, 4))
    ax.plot(forecast['ds'], forecast['yhat'], label="D·ª± b√°o")
    ax.set_xlabel("Th·ªùi gian")
    ax.set_ylabel("Doanh thu d·ª± b√°o")
    ax.set_title("Di·ªÖn bi·∫øn doanh thu d·ª± b√°o")
    ax.legend()
    st.pyplot(fig)

def generate_suggestions(forecast):
    # Generating suggestions based on forecast results
    suggestions = []
    for _, row in forecast.iterrows():
        month_label = row["Th√°ng d·ª± b√°o"]
        pct = row["So v·ªõi TB 3T (%)"]
        action = ""
        if pct >= 10:
            action = "M·ªü r·ªông s·∫£n xu·∫•t v√† tƒÉng c∆∞·ªùng cung c·∫•p s·∫£n ph·∫©m."
        # More actions for different cases...
        suggestions.append(f"**{month_label}** - Xu h∆∞·ªõng: {action}")

    return suggestions
